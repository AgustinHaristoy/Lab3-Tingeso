INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def suma(a,b):\n\treturn a + b\n\nresultado = suma(3,5)', '¿Qué valor tiene resultado después de ejecutar el código?', '8','facil');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def duplicar_numero(n):\n\treturn n * 2\n\nvalor = duplicar_numero(7)', '¿Cuál es el valor de valor al finalizar el código?', '14', 'facil');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def obtener_longitud(cadena):\n\treturn len(cadena)\n\ntexto = "Hola, Python"\nresultado = obtener_longitud(texto)', 'Después de ejecutar el código, ¿qué valor tiene resultado?', '12', 'facil');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def resta(a, b):\n\treturn a - b\n\nvalor = resta(10, 3)', '¿Cuál es el valor de valor al finalizar la ejecución?', '7', 'facil');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def obtener_ultimo_elemento(lista):\n\treturn lista[-1]\n\nnumeros = [1, 2, 3, 4, 5]\nresultado = obtener_ultimo_elemento(numeros)', '¿Qué valor tiene resultado después de ejecutar el código?', '5', 'facil');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def promedio(valores):\n\treturn sum(valores) / len(valores)\n\ndatos = [10, 20, 30, 40, 50]\nresultado = promedio(datos)', 'Después de ejecutar el código, ¿cuál es el valor de resultado?', '30.0', 'facil');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def es_par(numero):\n\treturn numero % 2 == 0\n\nnum = 7\nresultado = es_par(num)', '¿Qué valor tiene resultado al finalizar la ejecución?', 'False', 'facil');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def calcular_potencia(base, exponente):\n\treturn base ** exponente\n\nres = calcular_potencia(2, 4)', '¿Cuál es el valor de res al finalizar el código?', '16', 'facil');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def contar_vocales(cadena):\n\tvocales = "aeiouAEIOU"\n\treturn len([char for char in cadena if char in vocales])\n\ntexto = "Hola, cómo estás?"\nresultado = contar_vocales(texto)', '¿Cuántas vocales contiene el texto después de ejecutar el código?', '6', 'media');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def obtener_suma_pares(lista):\n\tpares = [num for num in lista if num % 2 == 0]\n\treturn sum(pares)\n\nnumeros = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nresultado = obtener_suma_pares(numeros)', '¿Cuál es el valor de resultado después de ejecutar el código?', '20', 'media');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def factorial(numero):\n\tif numero == 0:\n\t\treturn 1\n\telse:\n\t\treturn numero * factorial(numero - 1)\n\nresultado = factorial(5)', 'Después de ejecutar el código, ¿qué valor tiene resultado?', '120', 'media');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def eliminar_duplicados(lista):\n\treturn list(set(lista))\n\nnumeros = [1, 2, 2, 3, 3, 4, 5, 5]\nresultado = eliminar_duplicados(numeros)', 'Después de ejecutar el código, ¿cuántos elementos contiene resultado?', '5', 'media');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def obtener_maximo(lista):\n\treturn max(lista)\n\nnumeros = [10, 30, 5, 40, 20]\nresultado = obtener_maximo(numeros)', '¿Cuál es el valor máximo en la lista numeros después de ejecutar el código?', '40', 'media');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def es_palindromo(cadena):\n\treturn cadena == cadena[::-1]\n\ntexto = "reconocer"\nresultado = es_palindromo(texto)', 'Después de ejecutar el código, ¿qué valor tiene resultado?', 'True', 'media');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def contar_caracteres(texto):\n\treturn len(texto)\n\ntexto = "Python"\nresultado = contar_caracteres(texto)','¿Cuántos caracteres contiene la cadena "Python" después de ejecutar el código?','6','media');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def contar_caracteres_repetidos(cadena):\n\tcaracteres_repetidos = 0\n\tfor char in set(cadena):\n\t\tif cadena.count(char) > 1:\n\t\t\tcaracteres_repetidos += 1\n\treturn caracteres_repetidos\n\ntexto = "abracadabra"\nresultado = contar_caracteres_repetidos(texto)','Después de ejecutar el código, ¿cuántos caracteres repetidos hay en la cadena texto?','3','media');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def es_primo(numero):\n\tif numero < 2:\n\t\treturn False\n\tfor i in range(2, int(numero ** 0.5) + 1):\n\t\tif numero % i == 0:\n\t\t\treturn False\n\treturn True\n\nresultado = es_primo(17)','¿Es el número 17 un número primo después de ejecutar el código?(responda con lo que retorna el código)','True','dificil');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def producto_digitos(numero):\n\tproducto = 1\n\tfor digito in str(numero):\n\t\tproducto *= int(digito)\n\treturn producto\n\nresultado = producto_digitos(12345)','Después de ejecutar el código, ¿cuál es el valor de resultado?','120','dificil');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def obtener_subconjuntos(conjunto):\n\tsubconjuntos = [[]]\n\tfor elemento in conjunto:\n\t\tsubconjuntos.extend([actual + [elemento] for actual in subconjuntos])\n\treturn subconjuntos\n\nconjunto = [1, 2, 3]\nresultado = obtener_subconjuntos(conjunto)','Después de ejecutar el código, ¿cuántos subconjuntos contiene resultado?','8','dificil');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def contar_divisores(numero):\n\tdivisores = [i for i in range(1, numero + 1) if numero % i == 0]\n\treturn len(divisores)\n\nresultado = contar_divisores(12)','Después de ejecutar el código, ¿cuántos divisores tiene el número 12?','6','dificil');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def contar_palabras(frase):\n\treturn len(frase.split())\n\nfrase = "Python es un lenguaje de programación"\nresultado = contar_palabras(frase)','Después de ejecutar el código, ¿cuántas palabras contiene la frase?','6','dificil');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def obtener_mayor(lista):\n\treturn max(lista)\n\nnumeros = [25, 18, 30, 22, 27]\nresultado = obtener_mayor(numeros)','¿Cuál es el número mayor en la lista [25, 18, 30, 22, 27] después de ejecutar el código?','30','dificil');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def encontrar_minimo(lista):\n\treturn min(lista)\n\nnumeros = [5, 10, 2, 15, 8]\nresultado = encontrar_minimo(numeros)','¿Cuál es el número mínimo en la lista [5, 10, 2, 15, 8] después de ejecutar el código?','2','dificil');
INSERT INTO preguntas(codigo, pregunta, respuesta, dificultad) VALUES('def calcular_promedio(valores):\n\treturn sum(valores) / len(valores)\n\ndatos = [15, 20, 25, 30, 35]\nresultado = calcular_promedio(datos)','Después de ejecutar el código, ¿cuál es el valor del promedio de los números?','25','dificil');